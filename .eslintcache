[{"/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/App.js":"1","/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/components/dashboard/Dashboard.js":"2","/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/components/dashboard/FormDepartamento.js":"3","/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/components/dashboard/FormMaterial.js":"4","/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/components/dashboard/FormSetor.js":"5","/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/components/dashboard/FormUnidade.js":"6","/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/components/dashboard/Unidades.js":"7","/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/components/dashboard/Materiais.js":"8","/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/components/dashboard/Setores.js":"9","/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/components/dashboard/Departamentos.js":"10","/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/index.js":"11","/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/api/serviceApi.js":"12","/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/components/dashboard/Title.js":"13","/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/components/dashboard/FormContrato.js":"14","/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/components/dashboard/MainListItems.js":"15","/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/components/dashboard/Contratos.js":"16","/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/components/dashboard/Estoques.js":"17","/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/components/dashboard/FormEstoque.js":"18","/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/helpers/formaters.js":"19","/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/components/dashboard/FormVigencia.js":"20","/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/components/dashboard/Vigencias.js":"21","/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/components/dashboard/SecundaryListItems.js":"22","/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/ipBackend.js":"23","/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/components/dashboard/Servicos.js":"24","/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/components/dashboard/FormServico.js":"25"},{"size":166,"mtime":1608216285000,"results":"26","hashOfConfig":"27"},{"size":24099,"mtime":1613620398720,"results":"28","hashOfConfig":"27"},{"size":2696,"mtime":1613168080857,"results":"29","hashOfConfig":"27"},{"size":4155,"mtime":1612926031976,"results":"30","hashOfConfig":"27"},{"size":2994,"mtime":1613168092313,"results":"31","hashOfConfig":"27"},{"size":2141,"mtime":1613168104609,"results":"32","hashOfConfig":"27"},{"size":2322,"mtime":1612926361621,"results":"33","hashOfConfig":"27"},{"size":2618,"mtime":1613443096106,"results":"34","hashOfConfig":"27"},{"size":2933,"mtime":1612926485494,"results":"35","hashOfConfig":"27"},{"size":2607,"mtime":1612926515827,"results":"36","hashOfConfig":"27"},{"size":432,"mtime":1612927543897,"results":"37","hashOfConfig":"27"},{"size":7110,"mtime":1613620117862,"results":"38","hashOfConfig":"27"},{"size":343,"mtime":1608216285000,"results":"39","hashOfConfig":"27"},{"size":3546,"mtime":1613577367364,"results":"40","hashOfConfig":"27"},{"size":2603,"mtime":1613612741744,"results":"41","hashOfConfig":"27"},{"size":2684,"mtime":1613577403764,"results":"42","hashOfConfig":"27"},{"size":3099,"mtime":1613605819399,"results":"43","hashOfConfig":"27"},{"size":7684,"mtime":1613605791191,"results":"44","hashOfConfig":"27"},{"size":841,"mtime":1613488665124,"results":"45","hashOfConfig":"27"},{"size":5210,"mtime":1613578114888,"results":"46","hashOfConfig":"27"},{"size":2976,"mtime":1613577773078,"results":"47","hashOfConfig":"27"},{"size":623,"mtime":1612798200615,"results":"48","hashOfConfig":"27"},{"size":66,"mtime":1612925065977,"results":"49","hashOfConfig":"27"},{"size":5350,"mtime":1613618866836,"results":"50","hashOfConfig":"27"},{"size":12519,"mtime":1613620533838,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"14u0ohs",{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},"/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/App.js",[],["105","106"],"/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/components/dashboard/Dashboard.js",["107","108"],"/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/components/dashboard/FormDepartamento.js",[],"/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/components/dashboard/FormMaterial.js",[],"/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/components/dashboard/FormSetor.js",[],"/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/components/dashboard/FormUnidade.js",[],"/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/components/dashboard/Unidades.js",[],"/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/components/dashboard/Materiais.js",[],"/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/components/dashboard/Setores.js",[],"/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/components/dashboard/Departamentos.js",[],"/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/index.js",[],["109","110"],"/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/api/serviceApi.js",[],"/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/components/dashboard/Title.js",[],"/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/components/dashboard/FormContrato.js",[],"/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/components/dashboard/MainListItems.js",[],"/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/components/dashboard/Contratos.js",["111"],"/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/components/dashboard/Estoques.js",[],"/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/components/dashboard/FormEstoque.js",[],"/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/helpers/formaters.js",[],"/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/components/dashboard/FormVigencia.js",[],"/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/components/dashboard/Vigencias.js",[],"/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/components/dashboard/SecundaryListItems.js",[],"/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/ipBackend.js",[],"/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/components/dashboard/Servicos.js",["112","113"],"/home/bruno/dev/sistemasDae/dashboard-materialUI-dae/src/components/dashboard/FormServico.js",["114","115"],"import React, { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport * as api from '../../api/serviceApi';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Divider from '@material-ui/core/Divider';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nexport default function FormServico({\n  onSave,\n  items,\n  setNull,\n  unidades,\n  departamentos,\n  setores,\n  materiais,\n}) {\n  const classes = useStyles();\n  const [id, setId] = useState(null);\n  const [numeroRs, setNumeroRs] = useState('');\n  const [numeroOs, setNumeroOs] = useState('');\n  const [abertura, setAbertura] = useState('');\n  const [fechamento, setFechamento] = useState('');\n  const [unidade, setUnidade] = useState('');\n  const [departamento, setDepartamento] = useState('');\n  const [setor, setSetor] = useState('');\n  const [obs, setObs] = useState('');\n  const [custo, setCusto] = useState('');\n  const [selectedUnidade, setSelectedUnidade] = useState('');\n  const [selectedDepto, setSelectedDepto] = useState('');\n  const [selectedSetor, setSelectedSetor] = useState('');\n  const [selectedMaterial, setSelectedMaterial] = useState('');\n  const [selectedQuantidade, setSelectedQuantidade] = useState('');\n  const [selectedObs, setSelectedObs] = useState('');\n  const [newService, setNewService] = useState('');\n  const [newMatServ, setNewMatServ] = useState([]);\n  const [serviceDisabled, setServiceDisabled] = useState(false);\n  const [matServDisabled, setMatServDisabled] = useState(true);\n\n  useEffect(() => {\n    if (newService) {\n      setServiceDisabled((prevState) => !prevState);\n      setMatServDisabled((prevState) => !prevState);\n    }\n  }, [newService]);\n\n  const setData = (data) => {\n    setId(data.id_servico);\n    setNumeroRs(data.numero_rs);\n    setNumeroOs(data.numero_os);\n    setAbertura(data.data_abertura);\n    setFechamento(data.data_fechamento);\n    setUnidade(data.unidade);\n    setDepartamento(data.departamento);\n    setSetor(data.setor);\n    setObs(data.obs);\n    setCusto(data.custo);\n  };\n\n  // if (material) {\n  //   setData(material);\n  // }\n\n  const clearData = () => {\n    setId(null);\n    setNumeroRs('');\n    setNumeroOs('');\n    setAbertura('');\n    setFechamento('');\n    setUnidade('');\n    setDepartamento('');\n    setSetor('');\n    setObs('');\n    setCusto('');\n    setNull();\n  };\n\n  useEffect(() => {\n    if (items) {\n      setData(items);\n    }\n  }, [items]);\n\n  const handleClearData = (event) => {\n    event.preventDefault();\n    clearData();\n  };\n\n  const handleButton = async (event) => {\n    event.preventDefault();\n    const data = {\n      numeroRs: numeroRs,\n      numeroOs: numeroOs,\n      abertura: abertura,\n      fechamento: fechamento,\n      unidade: unidade,\n      departamento: departamento,\n      setor: setor,\n      obs: obs,\n      custo: custo,\n    };\n    if (id) {\n      await api.EditServico(id, data);\n    } else {\n      await api.InsertServico(data);\n    }\n    onSave();\n    clearData();\n  };\n\n  const handleButtonServico = async (event) => {\n    event.preventDefault();\n    const value = {\n      numero_rs: numeroRs,\n      numero_os: numeroOs,\n      data_abertura: abertura,\n      data_fechamento: fechamento,\n      unidade: selectedUnidade,\n      departamento: selectedDepto,\n      setor: selectedSetor,\n      obs: obs,\n    };\n    const resp = async (value) => {\n      const res = await api.InsertServico(value);\n      setNewService(res);\n    };\n    await resp(value);\n  };\n\n  const handleButtonTempService = (event) => {\n    event.preventDefault();\n    const mat = materiais.filter((m) => m.id === selectedMaterial);\n    const value = {\n      numero_rs: newService,\n      material: mat[0].id_material,\n      quantidade: selectedQuantidade,\n      comentarios: selectedObs,\n      numero_item: mat[0].numero_item,\n      descricao: mat[0].descricao,\n    };\n    setNewMatServ((prevState) => [...prevState, value]);\n    setSelectedMaterial('');\n    setSelectedQuantidade('');\n    setSelectedObs('');\n  };\n\n  const saveMatServs = async (event) => {\n    event.preventDefault();\n    newMatServ.forEach((ms) => {\n      const value = {\n        numero_rs: ms.numero_rs,\n        material: ms.material,\n        quantidade: ms.quantidade,\n        comentarios: ms.comentarios,\n      };\n      api.InsertMatServ(value);\n    });\n    setNumeroRs('');\n    setNumeroOs('');\n    setAbertura('');\n    setFechamento('');\n    setSelectedUnidade('');\n    setSelectedDepto('');\n    setSelectedSetor('');\n    setObs('');\n    setSelectedMaterial('');\n    setSelectedQuantidade('');\n    setSelectedObs('');\n    setNewService('');\n    setNewMatServ([]);\n    setServiceDisabled((prevState) => !prevState);\n    setMatServDisabled((prevState) => !prevState);\n  };\n\n  return (\n    <div>\n      <h2>Adicionar Serviço {id && <span>({id})</span>}</h2>\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <FormControl>\n          <TextField\n            disabled={serviceDisabled}\n            label=\"Número RS\"\n            value={numeroRs}\n            onInput={(e) => setNumeroRs(e.target.value)}\n          />\n        </FormControl>\n        <FormControl>\n          <TextField\n            disabled={serviceDisabled}\n            label=\"Número OS\"\n            value={numeroOs}\n            onInput={(e) => setNumeroOs(e.target.value)}\n          />\n        </FormControl>\n        <FormControl>\n          <TextField\n            disabled={serviceDisabled}\n            label=\"Data de Abertura\"\n            type=\"date\"\n            defaultValue={abertura}\n            className={classes.textField}\n            onInput={(e) => setAbertura(e.target.value)}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n        </FormControl>\n        <FormControl>\n          <TextField\n            disabled={serviceDisabled}\n            label=\"Data de Fechamento\"\n            type=\"date\"\n            defaultValue={fechamento}\n            className={classes.textField}\n            onInput={(e) => setFechamento(e.target.value)}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel>Unidade</InputLabel>\n          <Select\n            disabled={serviceDisabled}\n            native\n            onChange={(e) => setSelectedUnidade(parseInt(e.target.value))}\n          >\n            <option aria-label=\"None\" value=\"\" />\n            {unidades.map((unidade) => (\n              <option key={unidade.id_unidade} value={unidade.id_unidade}>\n                {unidade.name}\n              </option>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel>Departamento</InputLabel>\n          <Select\n            disabled={serviceDisabled}\n            native\n            onChange={(e) => setSelectedDepto(parseInt(e.target.value))}\n          >\n            <option aria-label=\"None\" value=\"\" />\n            {departamentos\n              .filter(\n                (departamento) => departamento.unidade === selectedUnidade\n              )\n              .map((departamento) => (\n                <option\n                  key={departamento.id_departamento}\n                  value={departamento.id_departamento}\n                >\n                  {departamento.name}\n                </option>\n              ))}\n          </Select>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel>Setor</InputLabel>\n          <Select\n            disabled={serviceDisabled}\n            native\n            onChange={(e) => setSelectedSetor(parseInt(e.target.value))}\n          >\n            <option aria-label=\"None\" value=\"\" />\n            {setores\n              .filter((setor) => setor.departamento === selectedDepto)\n              .map((setor) => (\n                <option key={setor.id_setor} value={setor.id_setor}>\n                  {setor.name}\n                </option>\n              ))}\n          </Select>\n        </FormControl>\n        <FormControl>\n          <TextField\n            disabled={serviceDisabled}\n            label=\"Observações\"\n            value={obs}\n            onInput={(e) => setObs(e.target.value)}\n          />\n        </FormControl>\n        <FormControl>\n          <Button\n            disabled={serviceDisabled}\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleButtonServico}\n            className={classes.button}\n          >\n            Inserir\n          </Button>\n        </FormControl>\n      </form>\n      <Divider />\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <FormControl>\n          <TextField\n            disabled\n            label=\" \"\n            value={`ID: ${newService} | RS: ${numeroRs}`}\n            size=\"small\"\n          />\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel>Material</InputLabel>\n          <Select\n            disabled={matServDisabled}\n            native\n            onChange={(e) => setSelectedMaterial(parseInt(e.target.value))}\n          >\n            <option aria-label=\"None\" value=\"\" />\n            {materiais.map((material) => (\n              <option key={material.id_material} value={material.id_material}>\n                {material.numero_item} - {material.descricao}\n              </option>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl>\n          <TextField\n            disabled={matServDisabled}\n            label=\"Quantidade\"\n            value={selectedQuantidade}\n            onInput={(e) => setSelectedQuantidade(e.target.value)}\n          />\n        </FormControl>\n        <FormControl>\n          <TextField\n            disabled={matServDisabled}\n            label=\"Comentários\"\n            value={selectedObs}\n            onInput={(e) => setSelectedObs(e.target.value)}\n          />\n        </FormControl>\n        <FormControl>\n          <Button\n            disabled={matServDisabled}\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleButtonTempService}\n            className={classes.button}\n          >\n            Inserir\n          </Button>\n        </FormControl>\n      </form>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">Código</TableCell>\n              <TableCell>Descrição</TableCell>\n              <TableCell align=\"center\">Quantidade</TableCell>\n              <TableCell align=\"center\">Comentários</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {newMatServ.map((row) => (\n              <TableRow key={row.id}>\n                <TableCell align=\"center\">{row.numero_item}</TableCell>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.descricao}\n                </TableCell>\n                <TableCell align=\"center\">{row.quantidade}</TableCell>\n                <TableCell align=\"center\">{row.comentarios}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <FormControl>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={(e) => handleButton(e)}\n          >\n            Enviar\n          </Button>\n        </FormControl>\n        <FormControl>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={(e) => handleClearData(e)}\n          >\n            Limpar\n          </Button>\n        </FormControl>\n      </TableContainer>\n    </div>\n  );\n}\n",{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":164,"column":10,"nodeType":"122","messageId":"123","endLine":164,"endColumn":25},{"ruleId":"120","severity":1,"message":"124","line":300,"column":9,"nodeType":"122","messageId":"123","endLine":300,"endColumn":20},{"ruleId":"116","replacedBy":"125"},{"ruleId":"118","replacedBy":"126"},{"ruleId":"120","severity":1,"message":"127","line":15,"column":26,"nodeType":"122","messageId":"123","endLine":15,"endColumn":38},{"ruleId":"120","severity":1,"message":"128","line":119,"column":9,"nodeType":"122","messageId":"123","endLine":119,"endColumn":19},{"ruleId":"120","severity":1,"message":"129","line":124,"column":9,"nodeType":"122","messageId":"123","endLine":124,"endColumn":16},{"ruleId":"120","severity":1,"message":"130","line":5,"column":8,"nodeType":"122","messageId":"123","endLine":5,"endColumn":16},{"ruleId":"120","severity":1,"message":"131","line":166,"column":9,"nodeType":"122","messageId":"123","endLine":166,"endColumn":21},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'selectedMatServ' is assigned a value but never used.","Identifier","unusedVar","'editMatServ' is assigned a value but never used.",["132"],["133"],"'formatNumber' is defined but never used.","'deleteItem' is assigned a value but never used.","'classes' is assigned a value but never used.","'MenuItem' is defined but never used.","'saveMatServs' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]