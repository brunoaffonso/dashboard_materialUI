[{"/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/index.js":"1","/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/App.js":"2","/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/Dashboard.js":"3","/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/Chart.js":"4","/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/SecundaryListItems.js":"5","/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/Setores.js":"6","/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/Departamentos.js":"7","/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/Unidades.js":"8","/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/Title.js":"9","/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/Materiais.js":"10","/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/MainListItems.js":"11","/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/FormUnidade.js":"12","/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/FormDepartamento.js":"13","/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/FormMaterial.js":"14","/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/FormSetor.js":"15","/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/Contratos.js":"16","/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/FormContrato.js":"17","/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/Vigencias.js":"18","/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/FormVigencia.js":"19","/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/FormEstoque.js":"20","/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/Servicos.js":"21","/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/FormServico.js":"22","/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/api/serviceApi.js":"23","/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/Estoques.js":"24","/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/helpers/formaters.js":"25","/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/ipBackend.js":"26"},{"size":432,"mtime":1612878095410,"results":"27","hashOfConfig":"28"},{"size":166,"mtime":1612878095410,"results":"29","hashOfConfig":"28"},{"size":25891,"mtime":1630586530880,"results":"30","hashOfConfig":"28"},{"size":1500,"mtime":1612878095410,"results":"31","hashOfConfig":"28"},{"size":623,"mtime":1612878095410,"results":"32","hashOfConfig":"28"},{"size":2933,"mtime":1641921289128,"results":"33","hashOfConfig":"28"},{"size":2607,"mtime":1641921272888,"results":"34","hashOfConfig":"28"},{"size":2322,"mtime":1641921298598,"results":"35","hashOfConfig":"28"},{"size":343,"mtime":1612878095410,"results":"36","hashOfConfig":"28"},{"size":2804,"mtime":1641921285058,"results":"37","hashOfConfig":"28"},{"size":2610,"mtime":1623856132980,"results":"38","hashOfConfig":"28"},{"size":2141,"mtime":1613731008298,"results":"39","hashOfConfig":"28"},{"size":2696,"mtime":1613731008298,"results":"40","hashOfConfig":"28"},{"size":4155,"mtime":1612967090010,"results":"41","hashOfConfig":"28"},{"size":2994,"mtime":1613731008298,"results":"42","hashOfConfig":"28"},{"size":2820,"mtime":1641921266938,"results":"43","hashOfConfig":"28"},{"size":3558,"mtime":1642088345778,"results":"44","hashOfConfig":"28"},{"size":3186,"mtime":1641921292698,"results":"45","hashOfConfig":"28"},{"size":5234,"mtime":1642088287568,"results":"46","hashOfConfig":"28"},{"size":7716,"mtime":1642083544398,"results":"47","hashOfConfig":"28"},{"size":5810,"mtime":1623856132980,"results":"48","hashOfConfig":"28"},{"size":16844,"mtime":1642083648908,"results":"49","hashOfConfig":"28"},{"size":7262,"mtime":1623856132980,"results":"50","hashOfConfig":"28"},{"size":3464,"mtime":1641921280608,"results":"51","hashOfConfig":"28"},{"size":841,"mtime":1642088254818,"results":"52","hashOfConfig":"28"},{"size":66,"mtime":1612967246190,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1dcj7cb",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/index.js",[],["109","110"],"/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/App.js",[],"/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/Dashboard.js",["111"],"import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Chart from './Chart';\nimport Materiais from './Materiais';\nimport * as api from '../../api/serviceApi';\nimport FormMaterial from './FormMaterial';\nimport MainListItems from './MainListItems';\nimport SecundaryListItems from './SecundaryListItems';\nimport Unidades from './Unidades';\nimport FormUnidade from './FormUnidade';\nimport Departamentos from './Departamentos';\nimport FormDepartamento from './FormDepartamento';\nimport Setores from './Setores';\nimport FormSetor from './FormSetor';\nimport Title from './Title';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport Contratos from './Contratos';\nimport FormContrato from './FormContrato';\nimport Vigencias from './Vigencias';\nimport FormVigencia from './FormVigencia';\nimport Estoques from './Estoques';\nimport FormEstoque from './FormEstoque';\nimport Servicos from './Servicos';\nimport FormServico from './FormServico';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Todos os direitos reservados © '}\n      <Link color=\"inherit\" href=\"https://www.fiocruz.br/\">\n        Fundação Oswaldo Cruz\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst date = new Date();\nconst day = date.getDate();\nconst month = date.getMonth();\nconst year = date.getFullYear();\nconst today = `${day}/${month}/${year}`;\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function Dashboard() {\n  const [menu, setMenu] = useState('dashboard');\n  const [material, setMaterial] = useState([]);\n  const [selectedMaterial, setSelectedMaterial] = useState(null);\n  const [unidade, setUnidade] = useState([]);\n  const [selectedUnidade, setSelectedUnidade] = useState(null);\n  const [departamento, setDepartamento] = useState([]);\n  const [selectedDepartamento, setSelectedDepartamento] = useState(null);\n  const [setor, setSetor] = useState([]);\n  const [selectedSetor, setSelectedSetor] = useState(null);\n  const [contrato, setContrato] = useState([]);\n  const [selectedContrato, setSelectedContrato] = useState(null);\n  const [vigencia, setVigencia] = useState([]);\n  const [selectedVigencia, setSelectedVigencia] = useState(null);\n  const [estoque, setEstoque] = useState([]);\n  const [selectedEstoque, setSelectedEstoque] = useState(null);\n  const [servico, setServico] = useState([]);\n  const [selectedServico, setSelectedServico] = useState(null);\n  const [matServ, setMatServ] = useState([]);\n  const [selectedMatServ, setSelectedMatServ] = useState(null);\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const [fullData, setFullData] = useState([]);\n  const [error, setError] = useState('');\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  const getMateriais = async () => {\n    const mats = await api.Materiais();\n    setMaterial(mats);\n  };\n\n  const getUnidades = async () => {\n    const unidades = await api.Unidade();\n    setUnidade(unidades);\n  };\n\n  const getDepartamentos = async () => {\n    const departamentos = await api.Departamento();\n    setDepartamento(departamentos);\n  };\n\n  const getSetores = async () => {\n    const setores = await api.Setor();\n    setSetor(setores);\n  };\n\n  const getContratos = async () => {\n    const contratos = await api.Contrato();\n    setContrato(contratos);\n  };\n\n  const getVigencias = async () => {\n    const vigencias = await api.Vigencia();\n    setVigencia(vigencias);\n  };\n\n  const getEstoques = async () => {\n    const estoques = await api.Estoque();\n    setEstoque(estoques);\n  };\n\n  const getServicos = async () => {\n    const servicos = await api.GetServices();\n    setServico(servicos);\n  };\n\n  const getMatServs = async () => {\n    const matServs = await api.MatServ();\n    setMatServ(matServs);\n  };\n\n  const getFullData = async () => {\n    const fullData = await api.FullData();\n    setMaterial(fullData.material);\n    setUnidade(fullData.unidade);\n    setDepartamento(fullData.departamento);\n    setSetor(fullData.setor);\n    setContrato(fullData.contrato);\n    setVigencia(fullData.vigencia);\n    setEstoque(fullData.estoque);\n    setServico(fullData.fullServices);\n    setMatServ(fullData.matServ);\n    setFullData(fullData);\n  };\n\n  const showData = () => {\n    console.log(unidade);\n    console.log(material);\n    console.log(departamento);\n    console.log(setor);\n    console.log(contrato);\n    console.log(vigencia);\n    console.log(estoque);\n    console.log(servico);\n    console.log(matServ);\n    console.log(fullData);\n  };\n\n  const setNull = () => {\n    setSelectedMaterial(null);\n    setSelectedUnidade(null);\n    setSelectedDepartamento(null);\n    setSelectedSetor(null);\n    setSelectedContrato(null);\n    setSelectedVigencia(null);\n    setSelectedEstoque(null);\n    setSelectedServico(null);\n    setSelectedMatServ(null);\n  };\n\n  const editMaterial = (mat) => {\n    const [res] = material.filter(\n      (m) => parseInt(m.id_material) === parseInt(mat)\n    );\n    setSelectedMaterial(res);\n  };\n\n  const editUnidade = (unid) => {\n    const [res] = unidade.filter(\n      (u) => parseInt(u.id_unidade) === parseInt(unid)\n    );\n    setSelectedUnidade(res);\n  };\n\n  const editDepartamento = (depto) => {\n    const [res] = departamento.filter(\n      (d) => parseInt(d.id_departamento) === parseInt(depto)\n    );\n    setSelectedDepartamento(res);\n  };\n\n  const editSetor = (set) => {\n    const [res] = setor.filter((s) => parseInt(s.id_setor) === parseInt(set));\n    setSelectedSetor(res);\n  };\n\n  const editContrato = (cont) => {\n    const [res] = contrato.filter(\n      (c) => parseInt(c.id_contrato) === parseInt(cont)\n    );\n    setSelectedContrato(res);\n  };\n\n  const editVigencia = (vig) => {\n    const [res] = vigencia.filter(\n      (v) => parseInt(v.id_vigencia) === parseInt(vig)\n    );\n    setSelectedVigencia(res);\n  };\n\n  const editEstoque = (est) => {\n    const [res] = estoque.filter(\n      (e) => parseInt(e.id_estoque) === parseInt(est)\n    );\n    setSelectedEstoque(res);\n  };\n\n  const editServico = (serv) => {\n    const [res] = servico.filter(\n      (s) => parseInt(s.id_servico) === parseInt(serv)\n    );\n    setSelectedServico(res);\n  };\n\n  const editMatServ = (ms) => {\n    const [res] = matServ.filter(\n      (m) => parseInt(m.id_mat_serv) === parseInt(ms)\n    );\n    setSelectedMatServ(res);\n  };\n\n  const setItem = (item) => {\n    setMenu(item);\n  };\n\n  useEffect(() => {\n    if (error) {\n      alert('Erro de conexão com o Banco de Dados');\n    }\n  }, [error]);\n\n  useEffect(() => {\n    // getMateriais();\n    // getUnidades();\n    // getDepartamentos();\n    // getSetores();\n    // getContratos();\n    // getVigencias();\n    // getEstoques();\n    // getServicos();\n    // getMatServs();\n    getFullData();\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            Dashboard\n          </Typography>\n          <IconButton color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <MainListItems setMenu={setItem} error={error} />\n        </List>\n        <Divider />\n        <List>\n          <SecundaryListItems />\n        </List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            {menu === 'dashboard' && (\n              <>\n                <Grid item xs={12} md={8} lg={9}>\n                  <Paper className={fixedHeightPaper}>\n                    <Chart />\n                  </Paper>\n                </Grid>\n                <Grid item xs={3} md={3} lg={3}>\n                  <Paper className={fixedHeightPaper}>\n                    <FormControl>\n                      <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={(e) => showData(e)}\n                      >\n                        Enviar\n                      </Button>\n                    </FormControl>\n                  </Paper>\n                </Grid>\n                <Grid item xs={3}>\n                  <Paper className={classes.paper}>\n                    <Title>Materiais Cadastrados</Title>\n                    <Typography component=\"p\" variant=\"h4\">\n                      {material.length}\n                    </Typography>\n                    <Typography\n                      color=\"textSecondary\"\n                      className={classes.depositContext}\n                    >\n                      {today}\n                    </Typography>\n                    <div>\n                      <Link\n                        color=\"primary\"\n                        href=\"#\"\n                        onClick={() => setMenu('material')}\n                      >\n                        Detalhes\n                      </Link>\n                    </div>\n                  </Paper>\n                </Grid>\n                <Grid item xs={3}>\n                  <Paper className={classes.paper}>\n                    <Title>Unidades Cadastrados</Title>\n                    <Typography component=\"p\" variant=\"h4\">\n                      {unidade.length}\n                    </Typography>\n                    <Typography\n                      color=\"textSecondary\"\n                      className={classes.depositContext}\n                    >\n                      {Date()}\n                    </Typography>\n                    <div>\n                      <Link\n                        color=\"primary\"\n                        href=\"#\"\n                        onClick={() => setMenu('unidade')}\n                      >\n                        Detalhes\n                      </Link>\n                    </div>\n                  </Paper>\n                </Grid>\n                <Grid item xs={3}>\n                  <Paper className={classes.paper}>\n                    <Title>Departamentos Cadastrados</Title>\n                    <Typography component=\"p\" variant=\"h4\">\n                      {departamento.length}\n                    </Typography>\n                    <Typography\n                      color=\"textSecondary\"\n                      className={classes.depositContext}\n                    >\n                      {Date()}\n                    </Typography>\n                    <div>\n                      <Link\n                        color=\"primary\"\n                        href=\"#\"\n                        onClick={() => setMenu('departamento')}\n                      >\n                        Detalhes\n                      </Link>\n                    </div>\n                  </Paper>\n                </Grid>\n                <Grid item xs={3}>\n                  <Paper className={classes.paper}>\n                    <Title>Setores Cadastrados</Title>\n                    <Typography component=\"p\" variant=\"h4\">\n                      {setor.length}\n                    </Typography>\n                    <Typography\n                      color=\"textSecondary\"\n                      className={classes.depositContext}\n                    >\n                      {Date()}\n                    </Typography>\n                    <div>\n                      <Link\n                        color=\"primary\"\n                        href=\"#\"\n                        onClick={() => setMenu('setor')}\n                      >\n                        Detalhes\n                      </Link>\n                    </div>\n                  </Paper>\n                </Grid>\n                <Grid item xs={3}>\n                  <Paper className={classes.paper}>\n                    <Title>Contratos Cadastrados</Title>\n                    <Typography component=\"p\" variant=\"h4\">\n                      {contrato.length}\n                    </Typography>\n                    <Typography\n                      color=\"textSecondary\"\n                      className={classes.depositContext}\n                    >\n                      {Date()}\n                    </Typography>\n                    <div>\n                      <Link\n                        color=\"primary\"\n                        href=\"#\"\n                        onClick={() => setMenu('contrato')}\n                      >\n                        Detalhes\n                      </Link>\n                    </div>\n                  </Paper>\n                </Grid>\n                <Grid item xs={3}>\n                  <Paper className={classes.paper}>\n                    <Title>Vigências</Title>\n                    <Typography component=\"p\" variant=\"h4\">\n                      {vigencia.length}\n                    </Typography>\n                    <Typography\n                      color=\"textSecondary\"\n                      className={classes.depositContext}\n                    >\n                      {Date()}\n                    </Typography>\n                    <div>\n                      <Link\n                        color=\"primary\"\n                        href=\"#\"\n                        onClick={() => setMenu('vigencia')}\n                      >\n                        Detalhes\n                      </Link>\n                    </div>\n                  </Paper>\n                </Grid>\n                <Grid item xs={3}>\n                  <Paper className={classes.paper}>\n                    <Title>Materiais em Estoque</Title>\n                    <Typography component=\"p\" variant=\"h4\">\n                      {estoque.length}\n                    </Typography>\n                    <Typography\n                      color=\"textSecondary\"\n                      className={classes.depositContext}\n                    >\n                      {Date()}\n                    </Typography>\n                    <div>\n                      <Link\n                        color=\"primary\"\n                        href=\"#\"\n                        onClick={() => setMenu('estoque')}\n                      >\n                        Detalhes\n                      </Link>\n                    </div>\n                  </Paper>\n                </Grid>\n                <Grid item xs={3}>\n                  <Paper className={classes.paper}>\n                    <Title>Serviços Cadastrados</Title>\n                    <Typography component=\"p\" variant=\"h4\">\n                      {servico.length}\n                    </Typography>\n                    <Typography\n                      color=\"textSecondary\"\n                      className={classes.depositContext}\n                    >\n                      {Date()}\n                    </Typography>\n                    <div>\n                      <Link\n                        color=\"primary\"\n                        href=\"#\"\n                        onClick={() => setMenu('servico')}\n                      >\n                        Detalhes\n                      </Link>\n                    </div>\n                  </Paper>\n                </Grid>\n              </>\n            )}\n            {menu === 'material' && (\n              <>\n                <Grid item xs={9}>\n                  <Paper className={classes.paper}>\n                    <Materiais\n                      listItems={material}\n                      onUpdate={getMateriais}\n                      editItem={editMaterial}\n                    />\n                  </Paper>\n                </Grid>\n                <Grid item xs={3}>\n                  <Paper className={classes.paper}>\n                    <FormMaterial\n                      onSave={getMateriais}\n                      items={selectedMaterial}\n                      setNull={setNull}\n                    />\n                  </Paper>\n                </Grid>\n              </>\n            )}\n            {menu === 'unidade' && (\n              <>\n                <Grid item xs={9}>\n                  <Paper className={classes.paper}>\n                    <Unidades\n                      listItems={unidade}\n                      onUpdate={getUnidades}\n                      editItem={editUnidade}\n                    />\n                  </Paper>\n                </Grid>\n                <Grid item xs={3}>\n                  <Paper className={classes.paper}>\n                    <FormUnidade\n                      onSave={getUnidades}\n                      items={selectedUnidade}\n                      setNull={setNull}\n                    />\n                  </Paper>\n                </Grid>\n              </>\n            )}\n            {menu === 'departamento' && (\n              <>\n                <Grid item xs={9}>\n                  <Paper className={classes.paper}>\n                    <Departamentos\n                      listItems={departamento}\n                      unidades={unidade}\n                      onUpdate={getDepartamentos}\n                      editItem={editDepartamento}\n                    />\n                  </Paper>\n                </Grid>\n                <Grid item xs={3}>\n                  <Paper className={classes.paper}>\n                    <FormDepartamento\n                      onSave={getDepartamentos}\n                      unidades={unidade}\n                      items={selectedDepartamento}\n                      setNull={setNull}\n                    />\n                  </Paper>\n                </Grid>\n              </>\n            )}\n            {menu === 'setor' && (\n              <>\n                <Grid item xs={9}>\n                  <Paper className={classes.paper}>\n                    <Setores\n                      listItems={setor}\n                      unidades={unidade}\n                      departamentos={departamento}\n                      onUpdate={getSetores}\n                      editItem={editSetor}\n                    />\n                  </Paper>\n                </Grid>\n                <Grid item xs={3}>\n                  <Paper className={classes.paper}>\n                    <FormSetor\n                      onSave={getSetores}\n                      unidades={unidade}\n                      departamentos={departamento}\n                      items={selectedSetor}\n                      setNull={setNull}\n                    />\n                  </Paper>\n                </Grid>\n              </>\n            )}\n            {menu === 'contrato' && (\n              <>\n                <Grid item xs={12}>\n                  <Paper className={classes.paper}>\n                    <FormContrato\n                      onSave={getContratos}\n                      items={selectedContrato}\n                      setNull={setNull}\n                    />\n                  </Paper>\n                </Grid>\n                <Grid item xs={12}>\n                  <Paper className={classes.paper}>\n                    <Contratos\n                      listItems={contrato}\n                      onUpdate={getContratos}\n                      editItem={editContrato}\n                    />\n                  </Paper>\n                </Grid>\n              </>\n            )}\n            {menu === 'vigencia' && (\n              <>\n                <Grid item xs={12}>\n                  <Paper className={classes.paper}>\n                    <FormVigencia\n                      onSave={getVigencias}\n                      items={selectedVigencia}\n                      setNull={setNull}\n                      contratos={contrato}\n                    />\n                  </Paper>\n                </Grid>\n                <Grid item xs={12}>\n                  <Paper className={classes.paper}>\n                    <Vigencias\n                      listItems={vigencia}\n                      onUpdate={getVigencias}\n                      editItem={editVigencia}\n                    />\n                  </Paper>\n                </Grid>\n              </>\n            )}\n            {menu === 'estoque' && (\n              <>\n                <Grid item xs={12}>\n                  <Paper className={classes.paper}>\n                    <FormEstoque\n                      onSave={getEstoques}\n                      items={selectedEstoque}\n                      setNull={setNull}\n                      materiaisList={material}\n                    />\n                  </Paper>\n                </Grid>\n                <Grid item xs={12}>\n                  <Paper className={classes.paper}>\n                    <Estoques\n                      listItems={estoque}\n                      onUpdate={getEstoques}\n                      editItem={editEstoque}\n                    />\n                  </Paper>\n                </Grid>\n              </>\n            )}\n            {menu === 'servico' && (\n              <>\n                <Grid item xs={12}>\n                  <Paper className={classes.paper}>\n                    <FormServico\n                      onSave={getServicos}\n                      onSaveMatServ={getMatServs}\n                      listItemsMatServ={matServ}\n                      itemsServico={selectedServico}\n                      itemsMatServ={selectedMatServ}\n                      setNull={setNull}\n                      unidades={unidade}\n                      departamentos={departamento}\n                      setores={setor}\n                      materiais={material}\n                      editItemMatServ={editMatServ}\n                    />\n                  </Paper>\n                </Grid>\n                <Grid item xs={12}>\n                  <Paper className={classes.paper}>\n                    <Servicos\n                      listItems={servico}\n                      onUpdate={getServicos}\n                      editItemServico={editServico}\n                    />\n                  </Paper>\n                </Grid>\n              </>\n            )}\n          </Grid>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/Chart.js",[],"/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/SecundaryListItems.js",[],"/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/Setores.js",[],"/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/Departamentos.js",[],"/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/Unidades.js",[],"/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/Title.js",[],"/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/Materiais.js",[],"/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/MainListItems.js",[],"/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/FormUnidade.js",[],"/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/FormDepartamento.js",[],"/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/FormMaterial.js",[],"/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/FormSetor.js",[],"/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/Contratos.js",[],"/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/FormContrato.js",[],"/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/Vigencias.js",[],"/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/FormVigencia.js",[],"/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/FormEstoque.js",[],"/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/Servicos.js",[],"/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/FormServico.js",["112","113"],"import React, { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport * as api from '../../api/serviceApi';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { dateFormat } from '../../helpers/formaters';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport DeleteForeverOutlinedIcon from '@material-ui/icons/DeleteForeverOutlined';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nexport default function FormServico({\n  onSave,\n  onSaveMatServ,\n  listItemsMatServ,\n  itemsServico,\n  itemsMatServ,\n  setNull,\n  unidades,\n  departamentos,\n  setores,\n  materiais,\n  editItemMatServ,\n}) {\n  const classes = useStyles();\n  const [idServico, setIdServico] = useState(null);\n  const [idMatServ, setIdMatserv] = useState(null);\n  const [numeroRs, setNumeroRs] = useState('');\n  const [numeroOs, setNumeroOs] = useState('');\n  const [abertura, setAbertura] = useState('');\n  const [fechamento, setFechamento] = useState('');\n  const [unidade, setUnidade] = useState('');\n  const [departamento, setDepartamento] = useState('');\n  const [setor, setSetor] = useState('');\n  const [obs, setObs] = useState('');\n  const [custo, setCusto] = useState('');\n  const [material, setMaterial] = useState('');\n  const [quantidade, setQuantidade] = useState('');\n  const [comentarios, setComentarios] = useState('');\n  const [matServ, setMatServ] = useState([]);\n  const [serviceDisabled, setServiceDisabled] = useState(false);\n  const [matServDisabled, setMatServDisabled] = useState(true);\n\n  useEffect(() => {\n    if (idServico) {\n      setServiceDisabled(false);\n      setMatServDisabled(false);\n    } else {\n      setServiceDisabled(false);\n      setMatServDisabled(true);\n    }\n  }, [idServico]);\n\n  useEffect(() => {\n    if (listItemsMatServ) {\n      setItemsMatServ(listItemsMatServ);\n    }\n  }, [listItemsMatServ, idServico]);\n\n  const setItemsMatServ = (data) => {\n    const newData = data\n      .filter((d) => d.numero_rs === idServico)\n      .map((r) => {\n        const [mat] = materiais.filter((m) => m.id_material === r.material);\n        return {\n          id_mat_serv: r.id_mat_serv,\n          numero_rs: idServico,\n          material: mat.id_material,\n          quantidade: r.quantidade,\n          comentarios: r.comentarios,\n          numero_item: mat.numero_item,\n          descricao: mat.descricao,\n        };\n      });\n    setMatServ(newData);\n  };\n\n  const setDataServico = (data) => {\n    setIdServico(data.id_servico);\n    setNumeroRs(data.numero_rs);\n    setNumeroOs(data.numero_os);\n    setAbertura(data.data_abertura);\n    setFechamento(data.data_fechamento);\n    setUnidade(data.unidade);\n    setDepartamento(data.departamento);\n    setSetor(data.setor);\n    setObs(data.obs);\n    setCusto(data.custo);\n  };\n\n  const setDataMatServ = (data) => {\n    setIdMatserv(data.id_mat_serv);\n    setNumeroRs(data.numero_rs);\n    setMaterial(data.material);\n    setQuantidade(data.quantidade);\n    setComentarios(data.comentarios);\n  };\n\n  const clearData = () => {\n    setIdServico(null);\n    setIdMatserv(null);\n    setNumeroRs('');\n    setNumeroOs('');\n    setAbertura('');\n    setFechamento('');\n    setUnidade('');\n    setDepartamento('');\n    setSetor('');\n    setObs('');\n    setCusto('');\n    setMaterial('');\n    setQuantidade('');\n    setComentarios('');\n    setNull();\n  };\n\n  useEffect(() => {\n    if (itemsServico) {\n      setDataServico(itemsServico);\n    }\n  }, [itemsServico]);\n\n  useEffect(() => {\n    if (itemsMatServ) {\n      setDataMatServ(itemsMatServ);\n    }\n  }, [itemsMatServ]);\n\n  const handleClearData = (event) => {\n    event.preventDefault();\n    clearData();\n  };\n\n  const handleButtonServico = async (event) => {\n    event.preventDefault();\n    const data = {\n      numero_rs: numeroRs,\n      numero_os: numeroOs,\n      data_abertura: dateFormat(abertura),\n      data_fechamento: dateFormat(fechamento),\n      unidade: unidade,\n      departamento: departamento,\n      setor: setor,\n      obs: obs,\n    };\n    if (idServico) {\n      await api.EditServico(idServico, data);\n      setMatServDisabled(false);\n      clearData();\n    } else {\n      const res = await api.InsertServico(data);\n      setIdServico(res);\n    }\n    onSave();\n  };\n\n  const handleButtonMatServ = async (event) => {\n    event.preventDefault();\n    const data = {\n      numero_rs: idServico,\n      material: material,\n      quantidade: quantidade,\n      comentarios: comentarios,\n    };\n    if (idMatServ) {\n      await api.EditMatServ(idMatServ, data);\n    } else {\n      await api.InsertMatServ(data);\n    }\n    onSave();\n    onSaveMatServ();\n    setIdMatserv(null);\n    setMaterial('');\n    setQuantidade('');\n    setComentarios('');\n  };\n\n  const deleteMatServ = async (id, event) => {\n    event.preventDefault();\n    await api.DeleteMatServ(id);\n    onSaveMatServ();\n    onSave();\n  };\n\n  const date = (value) => {\n    return new Date(value).toISOString();\n  };\n\n  const selectUnidade = (value) => {\n    setUnidade(value);\n    setDepartamento('');\n    setSetor('');\n  };\n\n  return (\n    <div>\n      <h2>Adicionar Serviço {idServico && <span>({idServico})</span>}</h2>\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <FormControl>\n          <TextField\n            disabled={serviceDisabled}\n            label=\"Número RS\"\n            value={numeroRs}\n            onInput={(e) => setNumeroRs(parseInt(e.target.value))}\n          />\n        </FormControl>\n        <FormControl>\n          <TextField\n            disabled={serviceDisabled}\n            label=\"Número OS\"\n            value={numeroOs}\n            onInput={(e) => setNumeroOs(parseInt(e.target.value))}\n          />\n        </FormControl>\n        <FormControl>\n          <TextField\n            disabled={serviceDisabled}\n            label=\"Data de Abertura\"\n            type=\"date\"\n            value={\n              abertura === '' || abertura === null ? '' : dateFormat(abertura)\n            }\n            onChange={(e) =>\n              e.target.value === ''\n                ? setAbertura(null)\n                : setAbertura(date(e.target.value))\n            }\n            className={classes.textField}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n        </FormControl>\n        <FormControl>\n          <TextField\n            disabled={serviceDisabled}\n            label=\"Data de Fechamento\"\n            type=\"date\"\n            value={\n              fechamento === '' || fechamento === null\n                ? ''\n                : dateFormat(fechamento)\n            }\n            onChange={(e) =>\n              e.target.value === ''\n                ? setFechamento(null)\n                : setFechamento(date(e.target.value))\n            }\n            className={classes.textField}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel>Unidade</InputLabel>\n          <Select\n            disabled={serviceDisabled}\n            native\n            value={unidade ? unidade : ''}\n            onChange={(e) => selectUnidade(parseInt(e.target.value))}\n          >\n            <option aria-label=\"None\" value=\"\" />\n            {unidades.map((unidade) => (\n              <option key={unidade.id_unidade} value={unidade.id_unidade}>\n                {unidade.name}\n              </option>\n            ))}\n          </Select>\n        </FormControl>\n        {/* <FormControl className={classes.formControl}>\n          <TextField\n            select\n            disabled={serviceDisabled}\n            label=\"Unidade\"\n            value={unidade ? unidade : ''}\n            onChange={(e) => selectUnidade(parseInt(e.target.value))}\n          >\n            {unidades.map((unidade) => (\n              <MenuItem key={unidade.id_unidade} value={unidade.id_unidade}>\n                {unidade.name}\n              </MenuItem>\n            ))}\n          </TextField>\n        </FormControl> */}\n        <FormControl className={classes.formControl}>\n          <InputLabel>Departamento</InputLabel>\n          <Select\n            disabled={serviceDisabled}\n            native\n            value={departamento ? departamento : ''}\n            onChange={(e) => setDepartamento(parseInt(e.target.value))}\n          >\n            <option aria-label=\"None\" value=\"\" />\n            {departamentos\n              .filter((departamento) => departamento.unidade === unidade)\n              .map((departamento) => (\n                <option\n                  key={departamento.id_departamento}\n                  value={departamento.id_departamento}\n                >\n                  {departamento.name}\n                </option>\n              ))}\n          </Select>\n        </FormControl>\n        {/* <FormControl className={classes.formControl}>\n          <TextField\n            select\n            disabled={serviceDisabled}\n            label=\"Departamento\"\n            value={departamento ? departamento : ''}\n            // defaultValue=\"\"\n            onChange={(e) => setDepartamento(parseInt(e.target.value))}\n          >\n            {departamentos\n              .filter((departamento) => departamento.unidade === unidade)\n              .map((departamento) => (\n                <MenuItem\n                  key={departamento.id_departamento}\n                  value={departamento.id_departamento}\n                >\n                  {departamento.name}\n                </MenuItem>\n              ))}\n          </TextField>\n        </FormControl> */}\n        <FormControl className={classes.formControl}>\n          <InputLabel>Setor</InputLabel>\n          <Select\n            disabled={serviceDisabled}\n            native\n            value={setor ? setor : ''}\n            onChange={(e) =>\n              e.target.value === ' ' || e.target.value === null\n                ? setSetor(null)\n                : setSetor(parseInt(e.target.value))\n            }\n          >\n            <option aria-label=\"None\" value=\"\" />\n            {setores\n              .filter((setor) => setor.departamento === departamento)\n              .map((setor) => (\n                <option key={setor.id_setor} value={setor.id_setor}>\n                  {setor.name}\n                </option>\n              ))}\n          </Select>\n        </FormControl>\n        {/* <FormControl className={classes.formControl}>\n          <TextField\n            select\n            disabled={serviceDisabled}\n            label=\"Setor\"\n            value={setor ? setor : ''}\n            // defaultValue=\"\"\n            onChange={(e) =>\n              e.target.value === ' ' || e.target.value === null\n                ? setSetor(null)\n                : setSetor(parseInt(e.target.value))\n            }\n          >\n            {setores\n              .filter((setor) => setor.departamento === departamento)\n              .map((setor) => (\n                <MenuItem key={setor.id_setor} value={setor.id_setor}>\n                  {setor.name}\n                </MenuItem>\n              ))}\n          </TextField>\n        </FormControl> */}\n        <FormControl>\n          <TextField\n            disabled={serviceDisabled}\n            label=\"Observações\"\n            value={obs}\n            onInput={(e) => setObs(e.target.value)}\n          />\n        </FormControl>\n        <FormControl>\n          <Button\n            disabled={serviceDisabled}\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleButtonServico}\n            className={classes.button}\n          >\n            Inserir\n          </Button>\n        </FormControl>\n        <FormControl>\n          <Button\n            disabled={serviceDisabled}\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={(e) => handleClearData(e)}\n          >\n            Limpar\n          </Button>\n        </FormControl>\n      </form>\n      <Divider />\n      <h3>Materiais do Serviço {idMatServ && <span>({idMatServ})</span>}</h3>\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <FormControl>\n          <TextField\n            disabled\n            label=\" \"\n            value={`ID: ${idServico} | RS: ${numeroRs}`}\n            size=\"small\"\n          />\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <TextField\n            select\n            disabled={matServDisabled}\n            label=\"Material\"\n            value={material ? material : ''}\n            defaultValue=\"\"\n            onChange={(e) => setMaterial(parseInt(e.target.value))}\n          >\n            {materiais.map((material) => (\n              <MenuItem key={material.id_material} value={material.id_material}>\n                {material.descricao}\n              </MenuItem>\n            ))}\n          </TextField>\n        </FormControl>\n        <FormControl>\n          <TextField\n            disabled={matServDisabled}\n            label=\"Quantidade\"\n            value={quantidade}\n            onInput={(e) => setQuantidade(e.target.value)}\n          />\n        </FormControl>\n        <FormControl>\n          <TextField\n            disabled={matServDisabled}\n            label=\"Comentários\"\n            value={comentarios}\n            onInput={(e) => setComentarios(e.target.value)}\n          />\n        </FormControl>\n        <FormControl>\n          <Button\n            disabled={matServDisabled}\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleButtonMatServ}\n            className={classes.button}\n          >\n            Adicionar Material\n          </Button>\n        </FormControl>\n        <FormControl>\n          <Button\n            disabled={matServDisabled}\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={(e) => handleButtonServico(e)}\n          >\n            Salvar Alterações\n          </Button>\n        </FormControl>\n        <FormControl>\n          <Button\n            disabled={matServDisabled}\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={(e) => handleClearData(e)}\n          >\n            Limpar\n          </Button>\n        </FormControl>\n      </form>\n      <Divider />\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">Código</TableCell>\n              <TableCell>Descrição</TableCell>\n              <TableCell align=\"center\">Quantidade</TableCell>\n              <TableCell align=\"center\">Comentários</TableCell>\n              <TableCell align=\"center\"> </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {matServ.map((row) => (\n              <TableRow key={row.id_mat_serv}>\n                <TableCell align=\"center\">{row.numero_item}</TableCell>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.descricao}\n                </TableCell>\n                <TableCell align=\"center\">{row.quantidade}</TableCell>\n                <TableCell align=\"center\">{row.comentarios}</TableCell>\n                <TableCell align=\"left\">\n                  <IconButton\n                    aria-label=\"edit\"\n                    className={classes.margin}\n                    onClick={() => editItemMatServ(row.id_mat_serv)}\n                  >\n                    <EditOutlinedIcon color=\"primary\" />\n                  </IconButton>\n                  <IconButton\n                    aria-label=\"delete\"\n                    className={classes.margin}\n                    onClick={(e) => deleteMatServ(row.id_mat_serv, e)}\n                  >\n                    <DeleteForeverOutlinedIcon color=\"secondary\" />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n","/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/api/serviceApi.js",[],"/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/components/dashboard/Estoques.js",[],"/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/helpers/formaters.js",[],"/home/bruno/dev/sistemasDae/dashboardDae_materialUI/src/ipBackend.js",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":168,"column":17,"nodeType":"120","messageId":"121","endLine":168,"endColumn":25},{"ruleId":"118","severity":1,"message":"122","line":56,"column":10,"nodeType":"120","messageId":"121","endLine":56,"endColumn":15},{"ruleId":"123","severity":1,"message":"124","line":78,"column":6,"nodeType":"125","endLine":78,"endColumn":35,"suggestions":"126"},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'setError' is assigned a value but never used.","Identifier","unusedVar","'custo' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setItemsMatServ'. Either include it or remove the dependency array.","ArrayExpression",["129"],"no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},"Update the dependencies array to be: [listItemsMatServ, idServico, setItemsMatServ]",{"range":"132","text":"133"},[2670,2699],"[listItemsMatServ, idServico, setItemsMatServ]"]